// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SkipitChat.Data;

namespace SkipitChat.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20201029123322_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SkipitChat.Domain.Accessibility", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("BikeParking")
                        .HasColumnType("bit");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DisabledService")
                        .HasColumnType("bit");

                    b.Property<bool>("Elevator")
                        .HasColumnType("bit");

                    b.Property<bool>("Escalator")
                        .HasColumnType("bit");

                    b.Property<bool>("Stairs")
                        .HasColumnType("bit");

                    b.Property<string>("StationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TicketMachine")
                        .HasColumnType("bit");

                    b.Property<bool>("Toilet")
                        .HasColumnType("bit");

                    b.Property<bool>("WaitingRoom")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Accessiblities");
                });

            modelBuilder.Entity("SkipitChat.Domain.CityPass", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("CityPass4Price")
                        .HasColumnType("real");

                    b.Property<float>("CityPass99Price")
                        .HasColumnType("real");

                    b.Property<int>("DurationInHour")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CityPasses");
                });

            modelBuilder.Entity("SkipitChat.Domain.Zone", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Animal")
                        .HasColumnType("real");

                    b.Property<float>("Bycicle")
                        .HasColumnType("real");

                    b.Property<int>("DurationInMinute")
                        .HasColumnType("int");

                    b.Property<float>("PriceAdult")
                        .HasColumnType("real");

                    b.Property<float>("PriceChildren")
                        .HasColumnType("real");

                    b.Property<float>("PriceDisabled")
                        .HasColumnType("real");

                    b.Property<float>("PriceElderly")
                        .HasColumnType("real");

                    b.Property<int>("ZoneValue")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Zones");
                });
#pragma warning restore 612, 618
        }
    }
}
